{"ast":null,"code":"var _jsxFileName = \"D:\\\\TelRan\\\\Front_Pr\\\\Practice\\\\practice_34_react_useEffect\\\\src\\\\components\\\\ProductCard\\\\ProductCard.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProductCard(props) {\n  const {\n    id,\n    title,\n    description,\n    price,\n    discountPercentage,\n    rating,\n    stock,\n    brand,\n    category,\n    thumbnail,\n    images\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 10\n  }, this);\n}\n\n// 5. Готовимся к работе с бэком. Создаем компонент `ProductCard`, который будет рендерить карточку товара. Компонент в пропсах примет данные о товаре (объект следующего вида).\n// ```\n// {\n//   \"id\": 1,\n//   \"title\": \"iPhone 9\",\n//   \"description\": \"An apple mobile which is nothing like apple\",\n//   \"price\": 549,\n//   \"discountPercentage\": 12.96,\n//   \"rating\": 4.69,\n//   \"stock\": 94,\n//   \"brand\": \"Apple\",\n//   \"category\": \"smartphones\",\n//   \"thumbnail\": \"...\",\n//   \"images\": [\"...\", \"...\", \"...\"]\n// }\n// ```\n// Сама карточка товара - это `div`, в котором есть h3 с названием товара (title), параграф с описанием (description), и параграф с ценой (price). С классами пока не заморачиваемся.\n_c = ProductCard;\nvar _c;\n$RefreshReg$(_c, \"ProductCard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ProductCard","props","id","title","description","price","discountPercentage","rating","stock","brand","category","thumbnail","images","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/TelRan/Front_Pr/Practice/practice_34_react_useEffect/src/components/ProductCard/ProductCard.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nexport default function ProductCard(props) {\r\n  const {\r\n    id,\r\n    title,\r\n    description,\r\n    price,\r\n    discountPercentage,\r\n    rating,\r\n    stock,\r\n    brand,\r\n    category,\r\n    thumbnail,\r\n    images,\r\n  } = props;\r\n\r\n  return <div>\r\n    <h3>{title}</h3>\r\n    <p>{description}</p>\r\n    <p>{price}</p>\r\n  </div>;\r\n}\r\n\r\n// 5. Готовимся к работе с бэком. Создаем компонент `ProductCard`, который будет рендерить карточку товара. Компонент в пропсах примет данные о товаре (объект следующего вида).\r\n// ```\r\n// {\r\n//   \"id\": 1,\r\n//   \"title\": \"iPhone 9\",\r\n//   \"description\": \"An apple mobile which is nothing like apple\",\r\n//   \"price\": 549,\r\n//   \"discountPercentage\": 12.96,\r\n//   \"rating\": 4.69,\r\n//   \"stock\": 94,\r\n//   \"brand\": \"Apple\",\r\n//   \"category\": \"smartphones\",\r\n//   \"thumbnail\": \"...\",\r\n//   \"images\": [\"...\", \"...\", \"...\"]\r\n// }\r\n// ```\r\n// Сама карточка товара - это `div`, в котором есть h3 с названием товара (title), параграф с описанием (description), и параграф с ценой (price). С классами пока не заморачиваемся.\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,WAAWA,CAACC,KAAK,EAAE;EACzC,MAAM;IACJC,EAAE;IACFC,KAAK;IACLC,WAAW;IACXC,KAAK;IACLC,kBAAkB;IAClBC,MAAM;IACNC,KAAK;IACLC,KAAK;IACLC,QAAQ;IACRC,SAAS;IACTC;EACF,CAAC,GAAGX,KAAK;EAET,oBAAOF,OAAA;IAAAc,QAAA,gBACLd,OAAA;MAAAc,QAAA,EAAKV;IAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBlB,OAAA;MAAAc,QAAA,EAAIT;IAAW;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBlB,OAAA;MAAAc,QAAA,EAAIR;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAC,EAAA,GAtCwBlB,WAAW;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}