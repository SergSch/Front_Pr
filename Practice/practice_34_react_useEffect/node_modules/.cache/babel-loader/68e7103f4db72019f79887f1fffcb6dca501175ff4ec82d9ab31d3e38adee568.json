{"ast":null,"code":"var _jsxFileName = \"D:\\\\TelRan\\\\Front_Pr\\\\Practice\\\\practice_34_react_useEffect\\\\src\\\\components\\\\greeting\\\\Greeting.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Greeting({\n  name\n}) {\n  _s();\n  useEffect(() => {\n    console.log('The Greeting component had been rendered!');\n  }, []);\n  useEffect(() => {\n    if (!name) {\n      console.log('The Greeting component will be unmounted!');\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: `Hello, ${!name ? 'visitor' : name}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n}\n\n// 1. Разбираемся со связью жизненного цикла компонента и хуком `useEffect`. Работаем с компонентом `Greeting`. Нужно, чтобы при ПЕРВОМ рендере нашего компонента, выводилось сообщение в консоль 'The Greeting component had been rendered!'. Уточнение: компонент `Greeting` теперь рендерится/прячется при нажатии на кнопку \"Toggle Greeting Visibility\".\n\n// 2. Теперь сделаем так, чтобы при размонтировании (удалении из DOM) нашего компонента, в консоль отображалось сообщение 'The Greeting component will be unmounted!'.\n_s(Greeting, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n_c = Greeting;\nvar _c;\n$RefreshReg$(_c, \"Greeting\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Greeting","name","_s","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/TelRan/Front_Pr/Practice/practice_34_react_useEffect/src/components/greeting/Greeting.jsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { useState } from 'react';\n\nexport default function Greeting({ name }) {\n  useEffect(() => {\n    console.log('The Greeting component had been rendered!');\n  }, []);\n\n  useEffect(() => {\n    if (!name) {\n      console.log('The Greeting component will be unmounted!');\n    }\n  }, []);\n\n  return <p>{`Hello, ${!name ? 'visitor' : name}`}</p>;\n}\n\n// 1. Разбираемся со связью жизненного цикла компонента и хуком `useEffect`. Работаем с компонентом `Greeting`. Нужно, чтобы при ПЕРВОМ рендере нашего компонента, выводилось сообщение в консоль 'The Greeting component had been rendered!'. Уточнение: компонент `Greeting` теперь рендерится/прячется при нажатии на кнопку \"Toggle Greeting Visibility\".\n\n// 2. Теперь сделаем так, чтобы при размонтировании (удалении из DOM) нашего компонента, в консоль отображалось сообщение 'The Greeting component will be unmounted!'.\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,QAAQA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EACzCN,SAAS,CAAC,MAAM;IACdO,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;EAC1D,CAAC,EAAE,EAAE,CAAC;EAENR,SAAS,CAAC,MAAM;IACd,IAAI,CAACK,IAAI,EAAE;MACTE,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;IAC1D;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOL,OAAA;IAAAM,QAAA,EAAK,UAAS,CAACJ,IAAI,GAAG,SAAS,GAAGA,IAAK;EAAC;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AACtD;;AAEA;;AAEA;AAAAP,EAAA,CAhBwBF,QAAQ;AAAAU,EAAA,GAARV,QAAQ;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}