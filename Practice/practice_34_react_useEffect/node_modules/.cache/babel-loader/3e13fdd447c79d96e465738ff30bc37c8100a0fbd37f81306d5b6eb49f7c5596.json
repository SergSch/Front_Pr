{"ast":null,"code":"var _jsxFileName = \"D:\\\\TelRan\\\\Front_Pr\\\\Practice\\\\practice_34_react_useEffect\\\\src\\\\components\\\\ProductList\\\\ProductList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProductList() {\n  _s();\n  const [dataProducts, setDataProducts] = useState([]);\n  useEffect(() => {\n    console.log('Component is');\n    fetch('https://dummyjson.com/products').then(response => response.json()).then(json => setDataProducts(json));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"ProductList\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, this);\n}\n\n// 6. Создаем компонент для списка товаров, `ProductList`. Он будет рендерить список товаров. Первый шаг - научиться загружать это список с бэка, с адреса `https://dummyjson.com/products`. Нужно при монтировании компонента (первый рендер), загружать этот список, и сохранять ответ в локальном стейте. ВАЖНО! Асинхронную операцию (обращение к бэку), нужно сделать в эффекте!\n_s(ProductList, \"t4Xr5A/Rd4Z7V5yQ+5t56LAkMSI=\");\n_c = ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ProductList","_s","dataProducts","setDataProducts","console","log","fetch","then","response","json","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/TelRan/Front_Pr/Practice/practice_34_react_useEffect/src/components/ProductList/ProductList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nexport default function ProductList() {\r\n  const [dataProducts, setDataProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    console.log('Component is');\r\n    fetch('https://dummyjson.com/products')\r\n      .then((response) => response.json())\r\n      .then((json) => setDataProducts(json));\r\n  }, []);\r\n\r\n  return <div>ProductList</div>;\r\n}\r\n\r\n// 6. Создаем компонент для списка товаров, `ProductList`. Он будет рендерить список товаров. Первый шаг - научиться загружать это список с бэка, с адреса `https://dummyjson.com/products`. Нужно при монтировании компонента (первый рендер), загружать этот список, и сохранять ответ в локальном стейте. ВАЖНО! Асинхронную операцию (обращение к бэку), нужно сделать в эффекте!\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACdQ,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3BC,KAAK,CAAC,gCAAgC,CAAC,CACpCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEE,IAAI,IAAKN,eAAe,CAACM,IAAI,CAAC,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOV,OAAA;IAAAW,QAAA,EAAK;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAC/B;;AAEA;AAAAb,EAAA,CAbwBD,WAAW;AAAAe,EAAA,GAAXf,WAAW;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}